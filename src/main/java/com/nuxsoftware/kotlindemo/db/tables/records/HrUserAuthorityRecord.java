/*
 * This file is generated by jOOQ.
*/
package com.nuxsoftware.kotlindemo.db.tables.records;


import com.nuxsoftware.kotlindemo.db.tables.HrUserAuthority;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HrUserAuthorityRecord extends UpdatableRecordImpl<HrUserAuthorityRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = -1379063824;

    /**
     * Setter for <code>PUBLIC.HR_USER_AUTHORITY.HR_USER_ID</code>.
     */
    public void setHrUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.HR_USER_AUTHORITY.HR_USER_ID</code>.
     */
    public Long getHrUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.HR_USER_AUTHORITY.AUTHORITY_NAME</code>.
     */
    public void setAuthorityName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.HR_USER_AUTHORITY.AUTHORITY_NAME</code>.
     */
    public String getAuthorityName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return HrUserAuthority.HR_USER_AUTHORITY.HR_USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return HrUserAuthority.HR_USER_AUTHORITY.AUTHORITY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getHrUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAuthorityName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getHrUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAuthorityName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HrUserAuthorityRecord value1(Long value) {
        setHrUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HrUserAuthorityRecord value2(String value) {
        setAuthorityName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HrUserAuthorityRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HrUserAuthorityRecord
     */
    public HrUserAuthorityRecord() {
        super(HrUserAuthority.HR_USER_AUTHORITY);
    }

    /**
     * Create a detached, initialised HrUserAuthorityRecord
     */
    public HrUserAuthorityRecord(Long hrUserId, String authorityName) {
        super(HrUserAuthority.HR_USER_AUTHORITY);

        set(0, hrUserId);
        set(1, authorityName);
    }
}
