/*
 * This file is generated by jOOQ.
*/
package com.nuxsoftware.kotlindemo.db.tables.daos;


import com.nuxsoftware.kotlindemo.db.tables.HrUserAuthority;
import com.nuxsoftware.kotlindemo.db.tables.records.HrUserAuthorityRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HrUserAuthorityDao extends DAOImpl<HrUserAuthorityRecord, com.nuxsoftware.kotlindemo.db.tables.pojos.HrUserAuthority, Record2<Long, String>> {

    /**
     * Create a new HrUserAuthorityDao without any configuration
     */
    public HrUserAuthorityDao() {
        super(HrUserAuthority.HR_USER_AUTHORITY, com.nuxsoftware.kotlindemo.db.tables.pojos.HrUserAuthority.class);
    }

    /**
     * Create a new HrUserAuthorityDao with an attached configuration
     */
    public HrUserAuthorityDao(Configuration configuration) {
        super(HrUserAuthority.HR_USER_AUTHORITY, com.nuxsoftware.kotlindemo.db.tables.pojos.HrUserAuthority.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Long, String> getId(com.nuxsoftware.kotlindemo.db.tables.pojos.HrUserAuthority object) {
        return compositeKeyRecord(object.getHrUserId(), object.getAuthorityName());
    }

    /**
     * Fetch records that have <code>HR_USER_ID IN (values)</code>
     */
    public List<com.nuxsoftware.kotlindemo.db.tables.pojos.HrUserAuthority> fetchByHrUserId(Long... values) {
        return fetch(HrUserAuthority.HR_USER_AUTHORITY.HR_USER_ID, values);
    }

    /**
     * Fetch records that have <code>AUTHORITY_NAME IN (values)</code>
     */
    public List<com.nuxsoftware.kotlindemo.db.tables.pojos.HrUserAuthority> fetchByAuthorityName(String... values) {
        return fetch(HrUserAuthority.HR_USER_AUTHORITY.AUTHORITY_NAME, values);
    }
}
