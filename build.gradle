buildscript {
	ext {
		kotlin_version = '1.2.30'
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
		classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
		classpath "nu.studer:gradle-jooq-plugin:2.0.11"
		classpath "org.liquibase:liquibase-gradle-plugin:1.2.4"
		classpath 'com.h2database:h2:1.4.177'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'

apply plugin: 'nu.studer.jooq'
apply plugin: 'org.liquibase.gradle'

group = 'com.nuxsoftware'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.liquibase:liquibase-core')
	compile('org.springframework.session:spring-session-core')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')
	runtime('org.postgresql:postgresql')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')

	jooqRuntime "com.h2database:h2:1.4.177"
}

jooq {
	kotlindemo(sourceSets.main) {
		jdbc {
			url = "jdbc:h2:file:${project.projectDir}/build/generator/${project.name}"
			user = 'sa'
			password = ''
		}
		generator {
			name = 'org.jooq.util.DefaultGenerator'
			strategy {
				name = 'org.jooq.util.DefaultGeneratorStrategy'
			}
			database {
				inputSchema = 'PUBLIC'
			}
			generate {
				daos = true
			}
			target {
				packageName = 'com.nuxsoftware.kotlindemo.db'
				directory = 'src/main/java'
			}
		}
	}
}

liquibase {
	activities {
		main {
			changeLogFile "${project.projectDir}/src/main/resources/db/master.xml"
			url "jdbc:h2:file:${project.projectDir}/build/generator/${project.name}"
			username 'sa'
			password ''
		}
	}

	runList = 'main'
}